[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mlf-sales-trainer-boilerplate"
version = "0.0.1"
description = "Repo for invoking with the sales trainer API"
readme = "README.md"
license = ""
keywords = [
    "factory",
    "inventory",
    "learning",
    "logistics",
    "machine",
    "management",
    "ml",
    "mlf",
    "python",
    "sales",
    "boilerplate",
    "api",
]
requires-python = ">=3.11, <3.12"
dependencies = [
    "pyhumps == 3.8.0",
]

[tool.hatch.envs.default]
type = "virtual"
path = ".venv"
dependencies = [
    "ruff == 0.1.8",
]

[tool.hatch.envs.default.scripts]
check = "ruff check ."
check-fix = "ruff check . --fix"
fmt = "ruff format ."

[tool.ruff]
select = [
    "ANN", # flake8-annotations
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "E",   # pycodestyle
    "ERA", # eradicate
    "F",   # pyflakes
    "I",   # isort
    "INP", # flake8-no-pep420
    "INT", # flake8-gettext
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLR", # pylint refactor
    "PLW", # pylint warning
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "RUF", # ruff
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP",  # pyupgrade
    "W",   # pycodestyle
]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "T201",    # `print` found
    "T203",    # `pprint` found
]

[tool.ruff.lint.pylint]
max-args = 13
